name: Build

on:
  push:
    branches: [ master ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-11, ubuntu-18.04]

    steps:
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Try npm cache
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: npm ci
        run: npm ci
      - name: Install apt dependencies
        if: startsWith(runner.os, 'Linux')
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install fakeroot libwine:i386 wine wine64 wine32 mono-devel
      - name: Make Linux
        if: startsWith(runner.os, 'Linux')
        run: npm run make-linux
      - name: Make Windows
        if: startsWith(runner.os, 'Linux')
        run: npm run make-win
      - name: Make macOS
        if: startsWith(runner.os, 'macOS')
        run: npm run make-mac
      - name: Cleanup artifacts
        run: |
          mkdir artifacts
          find out -name '*.zip' -exec mv '{}' ./artifacts \;
          find artifacts -name '*.zip' -exec bash -c 'mv $0 ${0/darwin/mac}' {} \;
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{matrix.os}}
          path: artifacts
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: "artifacts/**"
          draft: true
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true
      #   timeout-minutes: 2
